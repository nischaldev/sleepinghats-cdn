import{l as I,i as S,K as T,I as l,s as b}from"./mftsccs-browser-BCqLwk7v.js";import{g as A,t as d,v as C,c as w}from"./index-DNihHO4H.js";import{o as E}from"./loginModal.service-DXk_5cX_.js";import"./codemirror-D1H9tReK.js";import"./vendor-DEYWGvhS.js";import"./ckeditor-Cw9bcqxY.js";import"./eslint4b-BLWGvIOa.js";import"./prettier-ClL2wQep.js";async function L(){const g=new URLSearchParams(window.location.search),r=g.get("chat_id"),n=g.get("name");if(console.log("this is the chat Id",r,n),!(!r||!n))try{const s=await fetch(`${I.AI_URL}/get-widget-by-chat-id?chat_id=${r}`);if(s.ok){const e=await s.json();if(e.status==="success"){console.log(e,"this is the response for ai chat id");const h=e.data.ui.html,f=e.data.ui.css,m=e.data.before_render,p=e.data.after_render,u={id:e.data.chat_id,input:e.data.sanitized_input,type:e.data.widget_type},a={html:h,css:f,before_render:m,after_render:p,assistant:u},t=new S;t.html=a.html,t.css=a.css,t.before_render=a.before_render,t.after_render=a.after_render,t.assistant=a.assistant,t.name=n,console.log(" this is the widget tree to save",t);const o=await A();if(!o)await E(null,"Login or SignUp to save widget generated.");else try{d.infoMessageToast("Saving Your Widget",0),await C();const i=t.assistant;delete t.assistant;const c=await w("widget",o.userId,t),_=await T(o.entityId);if(await l(_,c,"s_widget"),i.id){const v=await w("assistant",o.userId,i);await l(c,v,"assistant")}const y=await b.SyncDataOnline();console.log("this is the widget details",y),document.querySelector(".infoMessageToast")?.remove(),d.successfullToast("Widget Saved Successfully")}catch(i){throw document.querySelector(".infoMessageToast")?.remove(),d.errorToast("Widget Save Failed"),i}finally{window.history.replaceState(null,"",window.location.pathname)}}else throw new Error("ai api error")}else throw new Error("ai api error")}catch(s){console.error("Error saving generated widget",s.message)}}await L();
